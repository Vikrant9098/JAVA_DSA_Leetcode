import java.util.Arrays;

class Solution 
{
    public int maxOperations(int[] nums, int k) 
    {
        Arrays.sort(nums); // अ‍ॅरे लहान ते मोठ्या क्रमाने सॉर्ट करा (O(n log n))

        int left = 0; // डावा पॉईंटर सुरुवातीला ठेवा

        int right = nums.length - 1; // उजवा पॉईंटर शेवटी ठेवा

        int count = 0; // जोडी (pair) मोजण्यासाठी काउंटर

        while (left < right) 
        { 
            // जोपर्यंत डावा आणि उजवा पॉईंटर ओव्हरलॅप होत नाहीत तोपर्यंत लूप चालवा
            int sum = nums[left] + nums[right]; // सध्याच्या दोन संख्यांची बेरीज

            if (sum == k) 
            { 
                // जर बेरीज `k` बरोबर असेल
                count++; // जोडी मिळाली, काउंटर वाढवा
                left++;  // पुढच्या जोडीसाठी डावा पॉईंटर हलवा
                right--; // पुढच्या जोडीसाठी उजवा पॉईंटर हलवा
            } 
            else if (sum < k) 
            { 
                // जर बेरीज `k` पेक्षा लहान असेल
                left++; // मोठ्या संख्येच्या दिशेने सरका
            } 
            else 
            {
                 // जर बेरीज `k` पेक्षा मोठी असेल
                right--; // लहान संख्येच्या दिशेने सरका
            }
        }

        return count; // मिळालेल्या जोड्यांची संख्या परत करा
    }
}
